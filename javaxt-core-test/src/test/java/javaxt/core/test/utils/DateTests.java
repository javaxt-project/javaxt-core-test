package javaxt.core.test.utils;

import org.junit.Test;

import javaxt.utils.Date;

public class DateTests {
    @Test
    public void testSupportedFormats() {
        String[] testDates = new String[] {
            "Mon, 7 Jun 1976 13:02:09 EST",
            "Mon, 07 Jun 1976 13:02:09 EST",
            "Mon, 07 Jun 1976 13:02:09",
            "Mon Jun 07 13:02:09 EST 1976",
            "Mon Jun 7 13:02:09 EST 1976",
            "Mon Jun 07 13:02:09 1976",
            "Mon Jun 7 13:02:09 1976",
            "Mon Jun 07 2013 00:00:00 GMT-0500 (Eastern Standard Time)",
            "1976-06-07 13:02:36.000 America/New_York",
            "1976-06-07 01:02:09.000-0500",
            "1976-06-07 01:02:09.000",
            "1976-06-07 13:02:36 America/New_York",
            "1976-06-07 13:02:36-0500",
            "1976-06-07 01:02:09",
            "1976:06:07 01:02:09",
            "1976-06-07-01:02:09.000",
            "1976-06-07-01:02:09",
            "07-Jun-1976 1:02:09 PM",
            "07-Jun-76 1:02:09 PM",
            "1976-06-07 13:02 America/New_York",
            "1976-06-07T13:02-0500",
            "1976-06-07T13:02",
            "1976-06-07",
            "07-Jun-76",
            "07-Jun-1976",
            "June 7, 1976",
            "6/7/1976 1:02:09 PM",
            "6/7/1976 1:02 PM",
            "06/07/1976 13:02:09 America/New_York",
            "06/07/1976 13:02:09",
            "06/07/1976 13:02 America/New_York",
            "06/07/1976 13:02",
            "06/07/1976 13:02:09",
            "6/7/76",
            "06/07/1976",
            "6/7/1976",
            "19760607130200000",
            "19760607130200",
            "19760607"
        };
        for (String dateStr : testDates) {
            try {
                Date date = new Date(dateStr);
                System.out.println("Parsed successfully: " + dateStr + " -> " + date);
            } catch (Exception e) {
                System.err.println("Failed to parse: " + dateStr + " (" + e.getMessage() + ")");
            }
        }
    }

    @Test
    public void testMonthsBetween() {
        String[][] tests = {
            {"2024-03-04", "2024-04-04", "1"},
            {"2024-03-04", "2025-04-04", "13"},
            {"2024-06-04", "2024-07-04", "1"},
            {"2024-11-28", "2025-02-28", "3"},
            {"2024-02-28", "2025-02-28", "12"},
            {"2024-02-29", "2025-02-28", "12"},
            {"2024-11-30", "2025-02-28", "3"},
            {"2024-01-01", "2024-01-02", "0.06451613"},
            {"2024-01-01", "2024-01-03", "0.09677419"},
            {"2024-01-01", "2024-01-31", "1"},
            {"2024-01-01", "2024-01-30", "0.96774194"},
            {"2024-04-01", "2024-04-15", "0.5"},
            {"2024-04-04", "2024-04-14", "0.36666667"},
            {"2024-04-14", "2024-04-04", "-0.36666667"},
            {"2024-01-01", "2025-01-01", "12"},
            {"2024-01-01", "2025-12-01", "23"},
            {"2024-11-30", "2024-12-31", "1.03225806"},
            {"2024-09-30", "2024-12-31", "3.03225806"},
            {"2024-06-30", "2024-12-31", "6.03225806"},
            {"2024-03-01", "2024-04-15", "1.5"},
            {"2024-03-01", "2024-04-30", "2"},
            {"2024-04-30", "2024-05-31", "1.03225806"},
            {"2024-04-30", "2024-06-30", "2"},
            {"2024-03-31", "2024-04-01", "0.03333333"},
            {"2024-03-31", "2024-04-05", "0.16666667"},
            {"2024-03-31", "2024-04-15", "0.5"},
            {"2024-03-31", "2024-04-30", "1"},
            {"2024-03-31", "2024-05-01", "1.03225806"},
            {"2024-11-28", "2025-02-27", "2.96428571"},
            {"2024-11-28", "2025-02-28", "3"},
            {"2024-11-29", "2025-02-28", "2.96666667"},
            {"2024-11-30", "2025-02-28", "3"},
            {"2024-12-30", "2025-02-28", "1.96774194"},
            {"2024-11-15", "2024-11-30", "0.53333333"},
            {"2024-11-30", "2024-11-15", "-0.53333333"},
            {"2024-11-15", "2025-11-30", "12.5"},
            {"2023-01-28", "2023-02-27", "0.96428571"},
            {"2023-02-27", "2023-03-26", "0.96774194"},
            {"2023-02-27", "2023-03-27", "1"},
            {"2023-02-27", "2023-03-28", "1.03225806"},
            {"2023-02-27", "2023-03-29", "1.06451613"},
            {"2023-02-27", "2023-03-30", "1.09677419"},
            {"2023-02-27", "2023-03-31", "1.12903226"},
            {"2023-02-28", "2023-03-30", "1.06451613"},
            {"2023-02-28", "2023-03-31", "1.09677419"},
            {"2023-01-27", "2023-02-28", "1.03571429"},
            {"2023-01-28", "2023-02-28", "1"},
            {"2023-01-29", "2023-02-28", "0.93548387"},
            {"2023-01-27", "2023-02-27", "1"},
            {"2023-01-28", "2023-02-27", "0.96428571"},
            {"2023-02-28", "2023-03-28", "1"},
            {"2023-02-27", "2023-03-30", "1.09677419"},
            {"2023-02-27", "2023-03-31", "1.12903226"},
            {"2023-02-28", "2023-03-30", "1.06451613"},
            {"2023-02-28", "2023-03-31", "1.09677419"},
            {"2024-01-28", "2024-02-28", "1"},
            {"2024-01-29", "2024-02-28", "0.96551724"},
            {"2024-01-30", "2024-02-28", "0.96774194"},
            {"2024-01-29", "2024-02-29", "1"},
            {"2024-01-30", "2024-02-29", "0.96774194"},
            {"2024-01-31", "2024-02-29", "1"},
            {"2023-01-31", "2023-02-28", "1"},
            {"2023-12-30", "2024-02-29", "1.96774194"},
            {"2023-12-31", "2024-02-29", "2"},
            {"2022-12-31", "2023-02-28", "2"},
            {"2023-02-28", "2024-02-29", "12.03448276"},
            {"2023-02-28", "2023-03-30", "1.06451613"},
            {"2023-02-28", "2023-03-31", "1.09677419"}
        };

        for (String[] test : tests) {
            String startDate = test[0];
            String endDate = test[1];
            String expectedStr = test[2];

            try {
                javaxt.utils.Date start = new javaxt.utils.Date(startDate);
                javaxt.utils.Date end = new javaxt.utils.Date(endDate);
                double actual = javaxt.utils.Date.getMonthsBetween(start, end);
                double expected = Double.parseDouble(expectedStr);

                System.out.println("Months between " + startDate + " and " + endDate + ": " + actual + " (expected: " + expected + ")");

                // Check if expected is a whole number
                if (expected == Math.floor(expected)) {
                    // Integer assertion
                    org.junit.Assert.assertEquals("Test failed for " + startDate + " to " + endDate,
                        (int)expected, (int)actual);
                } else {
                    // Range assertion for fractions
                    org.junit.Assert.assertEquals("Test failed for " + startDate + " to " + endDate,
                        expected, actual, 0.0001);
                }

            } catch (Exception e) {
                org.junit.Assert.fail("Exception thrown for " + startDate + " to " + endDate + ": " + e.getMessage());
            }
        }
    }
}